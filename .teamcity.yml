
jobs:
  build:
    runs-on: Ubuntu-24.04-Small
    steps:
      - type: script           # install + build in one step
        script-content: |
          yarn install --frozen-lockfile
          yarn build
          echo "Hello world"
        docker-image: node:18
    artifacts:
      paths:
        - dist/** => dist.zip

  bom-sca-scan:
    runs-on: Ubuntu-24.04-Small
    dependencies:
      - build
    use-artifacts:
      - job: build
        source-paths:
          - dist/**
    
    env:
      SCA_BOM_DETECT_DOWNLOAD_URL: "https://download.scantist.io/sca-bom-detect.jar"
      DEVSECOPS_TOKEN: "${DEVSECOPS_TOKEN}"
      DEVSECOPS_IMPORT_URL: "${DEVSECOPS_IMPORT_URL}"
      SCA_PLUGIN_DIR: ".scantist"
      SCA_REPORT_DIR: "devsecops_report"
    
    steps:
      - type: script
        name: Install Dependencies
        script-content: |
          echo "📦 Installing required dependencies..."
          apt-get update
          apt-get install -y curl openjdk-11-jre-headless
          echo "✅ Dependencies installed successfully"
        docker-image: ubuntu:latest
      
      - type: script
        name: Run SCA Scan
        script-content: |
          echo "🔍 Starting Scantist SCA scan..."
          
          # Validate DevSecOps token is provided
          if [[ -z "${DEVSECOPS_TOKEN}" ]]; then
            echo "[SCA ERROR] DEVSECOPS_TOKEN environment variable is required" >&2
            exit 1
          fi
          
          # Download SCA detector if not exists
          SCA_JAR_NAME="sca-bom-detect.jar"
          if [[ ! -f "${SCA_PLUGIN_DIR}/${SCA_JAR_NAME}" ]]; then
            echo "[SCA] Downloading SCA detector..."
            mkdir -p "${SCA_PLUGIN_DIR}"
            curl -L "${SCA_BOM_DETECT_DOWNLOAD_URL}" -o "${SCA_PLUGIN_DIR}/${SCA_JAR_NAME}"
            echo "[SCA] Download completed"
          fi
          
          # Create report directory
          mkdir -p "${SCA_REPORT_DIR}"
          
          # Run SCA scan with DevSecOps integration
          echo "[SCA] Starting scan on: %teamcity.build.checkoutDir%"
          echo "[SCA] DevSecOps integration enabled"
          
          # Environment variables are already set at the job level
          java -jar "${SCA_PLUGIN_DIR}/${SCA_JAR_NAME}" -f "%teamcity.build.checkoutDir%" --debug -report json
          
          echo "[SCA] Scan completed. Reports in: ${SCA_REPORT_DIR}"
        docker-image: ubuntu:latest
    
    artifacts:
      paths:
        - "%SCA_REPORT_DIR%/**" => sca-reports.zip